<?xml version="1.0"?>
<project name="JDFEditor" default="dist" basedir=".">
	<description>Build the JDFEditor.</description>
	<!-- Initializes -->
	<target name="-init" description="Initializes the build. This task is
        automatically run before building.">
		<echo>Initializing. Using build settings from ./build.properties...</echo>
		<echo>Make sure you have the JAR files listed in lib/DEPENDENCIES.txt</echo>
		<!-- Sets properties -->
		<tstamp />
		<condition property="isMacOs">
			<os family="mac" />
		</condition>
		<property name="src.dir" value="./src" />
		<property name="java.src.dir" value="${src.dir}/java" />
		<property name="test.src.dir" value="${src.dir}/test" />
		<property name="lib.dir" value="./lib" />
		<property name="bin.dir" value="./bin" />
		<property name="dist.dir" value="./dist" />
		<property name="build.debug" value="true" />
		<property name="base.filename" value="jdfeditor-${DSTAMP}" />
		<property name="dist.bin.dir" value="${dist.dir}/${base.filename}" />
		<property name="dist.src.dir" value="${dist.dir}/${base.filename}-src" />
		<property name="verbose" value="true" />
		<!-- Sets class path -->
		<path id="project.class.path">
			<pathelement path="${java.class.path}" />
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<!-- Creates directories -->
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	<target name="compile" depends="-init" description="Compiles the JDFEditor
        source code.">
		<echo>Compiling...</echo>
		<javac destdir="${bin.dir}" debug="${build.debug}" target="1.4" source="1.4">
			<src path="${java.src.dir}" />
			<classpath refid="project.class.path" />
			<include name="**/*.java" />
			
		</javac>
		<!--
		<copy todir="${bin.dir}">
			<fileset dir="${java.src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy>
		-->
	</target>
	<target name="clean" depends="-init" description="Cleans the build.">
		<echo>Cleaning...</echo>
		<delete dir="${bin.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${bin.dir}" />
	</target>
	<target name="dist" depends="srcdist,bindist"/>
	<target name="bindist" depends="compile" description="Builds a binary distribution of
        JDFEditor.">
		<echo>Building JDFEditor binary distribution...</echo>
		<!-- Create dist directories -->
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.bin.dir}" />
		<mkdir dir="${dist.bin.dir}/bin" />
		<mkdir dir="${dist.bin.dir}/conf" />
		<mkdir dir="${dist.bin.dir}/classes" />
		<mkdir dir="${dist.bin.dir}/lib" />
		<!-- Copy files to dist directories -->
		<copy todir="${dist.bin.dir}/bin">
			<fileset dir="${src.dir}/bin">
				<include name="**/*" />
				<exclude name="Info.plist"/>
			</fileset>
		</copy>
		<copy todir="${dist.bin.dir}/conf">
			<fileset dir="${src.dir}/conf">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${dist.bin.dir}/classes">
			<fileset dir="${bin.dir}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${java.src.dir}">
				<include name="org/cip4/jdfeditor/icons/*.*" />
			</fileset>
		</copy>
		<copy todir="${dist.bin.dir}/lib">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<include name="**/*.license" />
			</fileset>
		</copy>
		<copy file="src/README.txt" todir="${dist.bin.dir}" />
		<copy file="src/LICENSE.txt" todir="${dist.bin.dir}" />
		<buildnumber />
		<!-- Update build number and timestamp 
		<replace file="${dist.bin.dir}/conf/jdfeditor.properties">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		-->
		<replace file="${dist.bin.dir}/README.txt">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<fixcrlf srcdir="${dist.bin.dir}" includes="README.txt" eol="dos"/>
		<fixcrlf srcdir="${dist.bin.dir}/bin" eol="dos" includes="**/*.bat" />
		<fixcrlf srcdir="${dist.bin.dir}/bin" eol="unix" includes="**/*.sh" />
		<chmod dir="${dist.bin.dir}" perm="ugo+rx" includes="**/*.sh" />
		<!-- <antcall target="appledist"/> -->
		<zip destfile="${dist.dir}/${base.filename}.zip" basedir="${dist.bin.dir}">
			<zipfileset dir="${dist.bin.dir}" includes="**/*.sh" filemode="755" />
			<zipfileset dir="${dist.bin.dir}" includes="Alces.app/Contents/MacOS/JavaApplicationStub" filemode="755" />
		</zip>
		<echo>Build number: ${build.number}</echo>
	</target>

	<target name="srcdist" depends="compile" description="Builds a source distribution of
		        Alces.">
		<echo>Building Alces source distribution...</echo>
		<!-- Create dist directories -->
		<mkdir dir="${dist.src.dir}" />
		<copy todir="${dist.src.dir}">
			<fileset dir=".">
				<include name="src/**/*" />
				<include name="src/alces.sh" />
				<include name="src/alces.bat" />
				<include name="src/README.txt" />
				<include name="src/LICENSE.txt" />
				<include name="build.xml" />
			</fileset>
		</copy>
		<copy file="src/README.txt" todir="${dist.src.dir}" />
		<copy file="src/LICENSE.txt" todir="${dist.src.dir}" />
		<buildnumber />
		<replace file="${dist.src.dir}/README.txt">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<fixcrlf srcdir="${dist.src.dir}" includes="README.txt" eol="dos" />
		<fixcrlf srcdir="${dist.src.dir}/src/bin" eol="dos" includes="**/*.bat" />
		<fixcrlf srcdir="${dist.src.dir}/src/bin" eol="unix" includes="**/*.sh" />
		<chmod dir="${dist.src.dir}/src" perm="ugo+rx" includes="**/*.sh" />
		<zip destfile="${dist.dir}/${base.filename}-src.zip" basedir="${dist.src.dir}" />
		<echo>Build number: ${build.number}</echo>
	</target>
	<target name="test" description="Runs JUnit tests." depends="compile">
		<property name="test.bin.dir" value="${bin.dir}/test" />
		<mkdir dir="${test.bin.dir}" />
		<property name="test.reports.dir" value="${bin.dir}/test-reports" />
		<mkdir dir="${test.reports.dir}" />
		<!-- Compile test cases -->
		<echo>Compiling unit tests...</echo>
		<javac destdir="${test.bin.dir}" debug="${build.debug}" target="1.4" source="1.4">
			<src path="${test.src.dir}" />
			<classpath refid="project.class.path" />
			<classpath path="${bin.dir}" />
			<include name="**/*" />
		</javac>
		<!-- Run test cases -->
		<echo>Running unit tests...</echo>
		<junit fork="no" timeout="120000" dir="${test.src.dir}" tempdir="${test.bin.dir}" failureproperty="test.failure" errorproperty="test.error">
			<formatter type="plain" />
			<formatter type="xml" />
			<classpath>
				<pathelement path="${java.class.path}" />
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement path="${bin.dir}" />
				<pathelement path="${test.bin.dir}" />
				<pathelement path="${test.src.dir}/data" />
			</classpath>
			<batchtest fork="yes" todir="${test.reports.dir}">
				<fileset dir="${test.bin.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<echo>Tests reports have been written to: ${test.reports.dir}</echo>
	</target>
	<!-- For special app bundle on the Mac -->
	<target name="appledist" if="isMacOs"
      description="Assembles stand alone Macintosh Bundle. Must build on a Mac (>= 10.2).">
		<echo>Building Mac OS X application bundle...</echo>
		<!-- make all the dirs -->
		<property name="bundle.dir" value="${dist.bin.dir}/Alces.app" />
		<mkdir dir="${bundle.dir}" />
		<property name="contents.dir" value="${bundle.dir}/Contents" />
		<mkdir dir="${contents.dir}" />
		<property name="MacOS.dir" value="${contents.dir}/MacOS" />
		<mkdir dir="${MacOS.dir}" />
		<!-- copy files into place -->
		<copy file="src/bin/Info.plist" tofile="${contents.dir}/Info.plist"/>
		<replace file="${contents.dir}/Info.plist">
			<replacefilter token="@build.number@" value="${build.number}" />
			<replacefilter token="@build.timestamp@" value="${DSTAMP}" />
		</replace>
		<!-- create package identifier -->
		<echo file="${contents.dir}/PkgInfo" append="false">APPLALCS</echo>
		<exec executable="ln" spawn="false">
			<arg value="-s"/>
			<arg value="/System/Library/Frameworks/JavaVM.framework/Versions/A/Resources/MacOS/JavaApplicationStub"/>
			<arg value="${MacOS.dir}/JavaApplicationStub" />
		</exec>
	</target>
	<target name="dmgappledist" depends="appledist" 
      description="Creates Disk Image for Apple Dist. Must build on a Mac (>= 10.2).">
		<echo>Package appledist</echo>
		<exec executable="hdiutil" spawn="false">
			<arg value="create"/>
			<arg value="-srcfolder"/>
			<arg value="${bundle.dir}"/>
			<arg value="-volname"/>
			<arg value="Alces"/>
			<arg value="${dist.dir}/bin/Alces.dmg"/>
		</exec>
	</target>
</project>
